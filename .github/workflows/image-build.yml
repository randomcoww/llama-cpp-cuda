# References:
# https://some-natalie.dev/blog/kaniko-in-arc/
# https://dev.to/ipo/using-kaniko-to-build-and-publish-container-image-with-github-action-on-github-self-hosted-runners-d5m

name: Image Build
on:
  workflow_dispatch:
  schedule:
  - cron: "0 23 1 * *"
  push:
    paths-ignore:
    - .github/**
    - README.md
    branches:
    - master
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: gcr.io/kaniko-project/executor:debug
    permissions:
      contents: read
    steps:
    - name: Set tag
      run: |
        echo TAG=$(date -u +'%Y%m%d.%H%M') | tee -a "$GITHUB_ENV"

    - name: Build and release container
      run: |
        mkdir -p $DOCKER_CONFIG
        cat > $DOCKER_CONFIG/config.json <<EOF
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64 -w0)"
            }
          }
        }
        EOF
        echo -e "$INTERNAL_CA_CERT" > $DOCKER_CONFIG/internal.crt

        /kaniko/executor \
          --dockerfile="./Containerfile" \
          --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
          --destination="$INTERNAL_REGISTRY/${{ github.repository }}:v$TAG" \
          --registry-certificate=$INTERNAL_REGISTRY=$DOCKER_CONFIG/internal.crt \
          --build-arg BASE_IMAGE=ghcr.io/ggml-org/llama.cpp:server-cuda \
          --use-new-run \
          --skip-unused-stages \
          --snapshot-mode=redo \
          --cleanup \
          --image-fs-extract-retry=6 \
          --push-retry=6
  cleanup:
    needs:
      - build
    env:
      TAGS_KEEP: 4
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/regclient/regctl:alpine
    steps:
    - name: Remove old tags
      run: |
        set -e
        regctl registry set $INTERNAL_REGISTRY --cacert "$INTERNAL_CA_CERT"
        tags=$(regctl tag ls $INTERNAL_REGISTRY/${{ github.repository }} --exclude latest | sort -r)

        i=0
        for tag in $tags; do
          if [ "$i" -ge "$TAGS_KEEP" ]; then
            echo "Delete $tag"
            regctl tag delete --ignore-missing $INTERNAL_REGISTRY/${{ github.repository }}:$tag
          fi
          i=$((i + 1))
        done